name: Schema Drift Check (main PR)

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/schema-drift.yml'

jobs:
  drift-check:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: example
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Wait for MySQL
        shell: bash
        run: |
          for i in {1..30}; do
            if docker run --rm --network host mysql:8.0 sh -c 'mysqladmin ping -h127.0.0.1 -uroot -proot --silent'; then
              echo "MySQL is up"; break; fi; echo waiting...; sleep 2; done

      - name: Apply Flyway migrations
        working-directory: ./backend
        run: |
          ./gradlew flywayMigrate --no-daemon \
            -Dflyway.url=jdbc:mysql://127.0.0.1:3306/example \
            -Dflyway.user=root \
            -Dflyway.password=root

      - name: Validate schema matches JPA
        working-directory: ./backend
        env:
          SPRING_PROFILES_ACTIVE: prod
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/example
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root
          SPRING_FLYWAY_ENABLED: 'false'
        run: |
          ./gradlew test --no-daemon --tests com.maru.db.SchemaValidationTest

      # Optional: attach artifacts to help authors generate migrations
      - name: Dump DB schema (no data)
        run: |
          sudo apt-get update && sudo apt-get install -y mysql-client
          mysqldump -h 127.0.0.1 -uroot -proot --no-data example > db-schema.sql

      - name: Upload schema artifact
        uses: actions/upload-artifact@v4
        with:
          name: db-schema-after-flyway
          path: db-schema.sql
